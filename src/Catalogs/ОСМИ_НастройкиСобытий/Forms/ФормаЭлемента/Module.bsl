&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокВыбора = Новый Массив;
	Для Каждого МТД Из Метаданные.Справочники Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());	
	КонецЦикла;
	Для Каждого МТД Из Метаданные.Документы Цикл
		СписокВыбора.Добавить(МТД.ПолноеИмя());
	КонецЦикла;	
	
	Элементы.ОбъектКонфигурации.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Пуш = Объект.Действие = Перечисления.ОСМИ_Действие.ПушРассылка;
	ДинАкция = Объект.Действие = Перечисления.ОСМИ_Действие.МаркетинговаяАкция;
	
	Элементы.ТекстРассылки.Видимость = ДинАкция ИЛИ Пуш;
	Элементы.ТекстПоля.Видимость = ДинАкция;
	Элементы.ТекстЗаголовка.Видимость = ДинАкция;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектКонфигурацииПриИзменении(Элемент)
	
	Объект.ТабличнаяЧасть = "";
	Объект.Поле = "";
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабЧастьПриИзменении(Элемент)
	
	Объект.Поле = "";
	ОбновитьФорму();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	СтруктураДляОтображения = ПолучитьСтруктуруФормы(Объект.ОбъектКонфигурации, Объект.ТабличнаяЧасть);
	
	ЭтаФорма.Элементы.СправочникДокумент.Видимость =  СтруктураДляОтображения.Тип = "Справочник";
	ЭтаФорма.Элементы.Регистр.Видимость =  (СтруктураДляОтображения.Тип = "РегистрНакопления" или СтруктураДляОтображения.Тип = "РегистрСведений");
	
	Если СтруктураДляОтображения.Тип = "Справочник" Тогда 
		Элементы.ТабЧасть.СписокВыбора.ЗагрузитьЗначения(СтруктураДляОтображения.ТЧ);
	ИначеЕсли СтруктураДляОтображения.Тип = "РегистрНакопления" Тогда
		Если СтруктураДляОтображения.ТипРегистра = "Остаток" Тогда	
			Массив = Новый Массив;
			Массив.Добавить("Оборот");
			Массив.Добавить("Остаток");
			Массив.Добавить("Запись");
			
			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		Иначе
			Массив = Новый Массив;
			Массив.Добавить("Оборот");
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		КонецЕсли;
	Иначе
		Если СтруктураДляОтображения.ТипРегистра = "Непериодический" Тогда	
			Массив = Новый Массив;
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		Иначе
			Массив = Новый Массив;
			Массив.Добавить("Срез первых");
			Массив.Добавить("Срез последних");
			Массив.Добавить("Запись");

			Элементы.ТипРегистра.СписокВыбора.ЗагрузитьЗначения(Массив);	
		КонецЕсли;
	КонецЕсли;	 
	
	ОбновитьИнтерфейс();
	
	ОбновитьДерево();	
	
	ДействиеПриИзменении(Неопределено);
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолеОбъекта(Дерево, Поле)

	Типы = Поле.Тип.Типы(); 	
			
	Для Каждого Тип Из Типы Цикл
		МТД = Метаданные.НайтиПоТипу(Тип);
		Стр = Дерево.Строки.Добавить();
		Стр.Поле = Поле.Имя;
		Стр.Тип = Тип;
		Стр.ПолноеИмя = ?(МТД = Неопределено, "", МТД.ПолноеИмя());
		Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Поле.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДерево()
	
	Дерево = РеквизитФормыВЗначение("СписокВыбораИзДерева");
	Дерево.Строки.Очистить();
	
	Если СокрЛП(Объект.ОбъектКонфигурации) = "" Тогда
		Возврат;
	Иначе
		ОбъектКонфигурации = Метаданные.НайтиПоПолномуИмени(Объект.ОбъектКонфигурации);
		Если ОбъектКонфигурации = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Если Найти(Объект.ОбъектКонфигурации,"Справочник") = 1 ИЛИ 
		Найти(Объект.ОбъектКонфигурации,"Документ") = 1  Тогда
		
		Если ЗначениеЗаполнено(Объект.ТабличнаяЧасть) Тогда
			
			ТабличнаяЧасть = ОбъектКонфигурации.ТабличныеЧасти.Найти(Объект.ТабличнаяЧасть);
			Если ТабличнаяЧасть = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			Реквизиты = ТабличнаяЧасть.Реквизиты;

		Иначе
			Реквизиты = ОбъектКонфигурации.Реквизиты;
		КонецЕсли;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			ДобавитьПолеОбъекта(Дерево, Реквизит);			
		КонецЦикла;
		
		Стр = Дерево.Строки.Добавить();
		Стр.Поле = "Ссылка";
		Стр.ИмяВДереве = Объект.ОбъектКонфигурации + ".Ссылка";
		
	ИначеЕсли Найти(Объект.ОбъектКонфигурации, "РегистрНакопления") = 1 Тогда
		
		Для Каждого Измерение Из ОбъектКонфигурации.Измерения Цикл
			ДобавитьПолеОбъекта(Дерево, Измерение);			
		КонецЦикла;		
		
		Для Каждого Ресурс Из ОбъектКонфигурации.Ресурсы Цикл
			ДобавитьПолеОбъекта(Дерево, Измерение);			
		КонецЦикла;		

	ИначеЕсли Найти(Объект.ОбъектКонфигурации,"РегистрСведений") = 1 Тогда
		
		Для Каждого Измерение Из ОбъектКонфигурации.Измерения Цикл
			ДобавитьПолеОбъекта(Дерево, Измерение);			
		КонецЦикла;		
		
		Для Каждого Ресурс Из ОбъектКонфигурации.Ресурсы Цикл
			ДобавитьПолеОбъекта(Дерево, Ресурс);			
		КонецЦикла;	
	КонецЕсли;
	 
	ЗначениеВРеквизитФормы(Дерево,"СписокВыбораИзДерева");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруФормы(Имя, ИмяТч)
	
	СтруктураДляОтображения = Новый Структура;
	СтруктураДляОтображения.Вставить("Поля",Новый Массив);
	СтруктураДляОтображения.Вставить("ТЧ",Новый Массив);
	СтруктураДляОтображения.Вставить("Тип");
	СтруктураДляОтображения.Вставить("ТипРегистра");

	МТД = Метаданные.НайтиПоПолномуИмени(Имя);
	Если МТД <> Неопределено Тогда
		Если Найти(Имя,"Справочник") = 1 или Найти(Имя,"Документ") = 1  Тогда
			
			СтруктураДляОтображения.Тип = "Справочник";
			СтруктураДляОтображения.Поля.Добавить("Ссылка");

			Если ИмяТч = "" Тогда
				Таб = МТД.Реквизиты;
			Иначе
				Таб = МТД.ТабличныеЧасти[ИмяТч].Реквизиты;
			КонецЕсли;
			Для Каждого МТД1 из Таб Цикл
				СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
			КонецЦикла;
			
			Для Каждого Таб из МТД.ТабличныеЧасти Цикл
				СтруктураДляОтображения.ТЧ.Добавить(Таб.Имя);
			КонецЦикла;			
			
		ИначеЕсли Найти(Имя,"РегистрНакопления") = 1 Тогда
			СтруктураДляОтображения.Тип = "РегистрНакопления";
			
			Если (МТД.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки) Тогда 
				СтруктураДляОтображения.ТипРегистра = "Остатки";
			Иначе
				СтруктураДляОтображения.ТипРегистра = "Обороты";
			КонецЕсли;	
			
			Для Каждого МТД1 из МТД.Измерения Цикл
				СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
			КонецЦикла;
			
			Для Каждого МТД1 из МТД.Ресурсы Цикл
				СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
			КонецЦикла;
		
		ИначеЕсли Найти(Имя, "РегистрСведений") = 1 Тогда
			
			СтруктураДляОтображения.Тип = "РегистрСведений";
					
			Если (МТД.ПериодичностьРегистраСведений = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический) Тогда 
				СтруктураДляОтображения.ТипРегистра = "Непериодический";
			Иначе
				СтруктураДляОтображения.ТипРегистра = "Периодический";
			КонецЕсли;	
			
			Для Каждого МТД1 из МТД.Измерения Цикл
				СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
			КонецЦикла;
			
			Для Каждого МТД1 из МТД.Ресурсы Цикл
				СтруктураДляОтображения.Поля.Добавить(Мтд1.имя);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураДляОтображения;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОсновнымПолемОтбора(Команда)
	
	Объект.ПолеОсновногоОтбора = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.Поле;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВСписокОтборовНаСервере(Поле)
	
	Об = РеквизитФормыВЗначение("Объект");
		
	Стр = Об.Отборы.Добавить();	
	Стр.Параметр = Поле;  
	
	ЗначениеВРеквизитФормы(Об,"Объект");

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВСписокОтборов(Команда)
	
	ДобавитьВСписокОтборовНаСервере(ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.Поле);

КонецПроцедуры

&НаСервере
Процедура ПроверитьНаСервере()
	Попытка
		Об = РеквизитФормыВЗначение("Объект");
		Результат = Об.ПолучитьЗначениеПоля(Об.КартаДляПроверки);
		Сообщить(Результат);
	Исключение
		сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ПроверитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РазвернутьНаСервере(ПолноеИмя,Имя,ТипМтд)	
	
	Попытка
		
		Массив = СтрРазделить(ПолноеИмя,".");
		Дерево = РеквизитФормыВЗначение("СписокВыбораИзДерева");
		Строка = ВернутьСтрокуДерева(Массив,2,Дерево,ТипМтд);
		Реквизиты = Метаданные.НайтиПоПолномуИмени(Имя).Реквизиты;
		
		Для Каждого Реквизит Из Реквизиты Цикл
			Типы = Реквизит.Тип.Типы(); 	
			Для Каждого тип Из Типы Цикл
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр = Строка.Строки.Добавить();
				Стр.Поле = Реквизит.Имя;
				Стр.Тип = Тип;
				МТД = Метаданные.НайтиПоТипу(Тип);
				Стр.ПолноеИмя = ?(МТД = Неопределено, "", МТД.ПолноеИмя());
				Стр.ИмяВДереве = Объект.ОбъектКонфигурации + "." + Строка.Поле + "." + Реквизит.Имя;
			КонецЦикла;
		КонецЦикла;
	
		ЗначениеВРеквизитФормы(Дерево,"СписокВыбораИзДерева");		
	
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСтрокуДерева(Массив,Уровень,Родитель,ТипМтд)
	Для Каждого Строка Из Родитель.Строки Цикл
		Если Строка.Поле = Массив[Уровень] и Строка.Тип = ТипМтд Тогда
			Если Массив.Количество()-1 = Уровень Тогда 
				Возврат Строка;
			Иначе
				Возврат ВернутьСтрокуДерева(Массив,Уровень+1,Строка,ТипМтд);
			КонецЕсли;				
		КонецЕсли;			
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура Развернуть(Команда)
	ТекПоле = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные;
	РазвернутьНаСервере(ТекПоле.ИмяВДереве, ТекПоле.ПолноеИмя, ТекПоле.Тип);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКакПоле(Команда)
	
	Объект.Поле = "";
	
	ПолноеИмя = ЭтаФорма.Элементы.СписокВыбораИзДерева.ТекущиеДанные.ИмяВДереве; 
	Массив = СтрРазделить(ПолноеИмя,".");
	
	Для а = 2 по Массив.Количество()-1 Цикл
		Объект.Поле = Объект.Поле + "." + Массив.Получить(а);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьСейчасНаСервере()
	
	РеквизитФормыВЗначение("Объект").ОтработатьСобытие("РегламентноеЗадание");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	
	ВыполнитьСейчасНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Для Каждого СтрВход из ПараметрыПеретаскивания.Значение Цикл
		Стр = Объект.Отборы.Добавить();
		Стр.Параметр = СтрВход.Поле;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СформироватьСтандартнуюОбработкуНаСервере()

	Об = РеквизитФормыВЗначение("Объект");
	
	Если НЕ СокрЛП(Об.ПолеОсновногоОтбора) = "" Тогда
		СтрокаУсловий = "ГДЕ Таблица." + Об.ПолеОсновногоОтбора + " = &Карта";
		СтрокаПараметров = "Запрос.УстановитьПараметр(""Карта"", Источник);" + Символы.ПС;
	Иначе
		СтрокаУсловий = "";
		СтрокаПараметров = "";
	КонецЕсли;
	
	Для Каждого Поле Из Об.Отборы Цикл
		СтрокаУсловий = СтрокаУсловий + ?(СтрДлина(СокрЛП(СтрокаУсловий)) > 0, " И ", "ГДЕ ") +
			"Таблица." + Поле.Параметр + " = &" + Поле.Параметр;
		СтрокаПараметров =  СтрокаПараметров +
			"Запрос.УстановитьПараметр(""" + Поле.Параметр + """, Отборы.Получить(" +
			(Поле.НомерСтроки - 1) + ").Значение);" + Символы.ПС;	
	КонецЦикла;
	
	Об.ТекстПрограммы = "Запрос = НОВЫЙ Запрос; " + Символы.ПС +
		"Запрос.Текст = ""ВЫБРАТЬ Таблица%Поле% КАК Поле ИЗ %ИмяТаблицы% КАК Таблица %Условия%"";"  +
		Символы.ПС + СтрокаПараметров + "Выборка = Запрос.Выполнить().Выбрать();" + Символы.ПС +
		"Пока Выборка.Следующий() Цикл " + Символы.ПС + Символы.Таб +
		"Результат.Добавить(Выборка.Поле);" + Символы.ПС + "КонецЦикла; " + Символы.ПС;	

	Если Найти(Об.ОбъектКонфигурации, "Справочник") = 1 ИЛИ 
		Найти(Об.ОбъектКонфигурации, "Документ") = 1 Тогда
		ИмяТаблицы = Об.ОбъектКонфигурации + ?(СтрДлина(СокрЛП(Об.ТабличнаяЧасть)) = 0, "", "." + Об.ТабличнаяЧасть);	
		Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Поле%", Об.Поле);
	ИначеЕсли Найти(Об.ОбъектКонфигурации,"РегистрНакопления") = 1 Тогда
		Если Об.ТипРегистра = "Запись" Тогда
			ИмяТаблицы = Об.ОбъектКонфигурации;
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Поле%", Об.Поле);
		ИначеЕсли Об.ТипРегистра = "Остаток" Тогда 
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Поле%", Об.Поле + "Остаток");
			ИмяТаблицы = Об.ОбъектКонфигурации + ".Остатки";
		ИначеЕсли Об.ТипРегистра = "Оборот" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации+".Обороты";
			Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Поле%", Об.Поле + "Оборот");
		КонецЕсли;
	ИначеЕсли Найти(Об.ОбъектКонфигурации,"РегистрСведений") = 1  Тогда 
		Если Об.ТипРегистра = "Запись" Тогда
			ИмяТаблицы = Об.ОбъектКонфигурации;
		ИначеЕсли Об.ТипРегистра = "Срез первых" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации + ".СрезПервых";
		ИначеЕсли Об.ТипРегистра = "Срез последних" Тогда 
			ИмяТаблицы = Об.ОбъектКонфигурации + ".СрезПоследних";
		КонецЕсли;
		Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Поле%", Об.Поле);
	Иначе
		ИмяТаблицы = "";
	КонецЕсли;
	
	Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%ИмяТаблицы%", ИмяТаблицы); 
	Об.ТекстПрограммы = СтрЗаменить(Об.ТекстПрограммы, "%Условия%", СтрокаУсловий);

	ЗначениеВРеквизитФормы(Об, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСтандартнуюОбработку(Команда)
	
	СформироватьСтандартнуюОбработкуНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

#Область УстановкаРасписанияВыполнения

&НаКлиенте
Процедура СоздатьРегламентноеЗадание(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ
		Модифицированность Тогда
		ПоказатьПредупреждение(, "Для установки расписания необходимо записать настройку события", 60, "Внимание!");
		Возврат;
	ИначеЕсли Объект.ПометкаУдаления Тогда
		ПоказатьПредупреждение(, "Для помеченного на удаление события настройка расписания невозможна", 60, "Внимание!");
		Возврат;
	КонецЕсли;
	
	Расписание = ПолучитьРасписаниеРегламентногоЗаданияНаСервере();
	Если Расписание = Неопределено Тогда
		ПоказатьПредупреждение(, "При получении расписания регламентного задания произошла ошибка!", 60, "Ошибка!");
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);  		
	Диалог.Показать(Новый ОписаниеОповещения("УстановитьРасписание", ЭтотОбъект)); 	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасписание(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		УстановитьРасписаниеНаСервере(Расписание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасписаниеРегламентногоЗаданияНаСервере()
	
	Задание = РеквизитФормыВЗначение("Объект").СоздатьПолучитьРегламентноеЗадание();
	Если Задание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Возврат Задание.Расписание;
	
КонецФункции

&НаСервере
Процедура УстановитьРасписаниеНаСервере(Расписание)

	РеквизитФормыВЗначение("Объект").УстановитьПараметрыРегламентногоЗадания(, Расписание);

КонецПроцедуры

#КонецОбласти