
Функция ПолучитьСписокКарт(Источник) Экспорт
	
	Попытка
		Результат = Новый Массив;
		Выполнить(ТекстПрограммы);
		Возврат(Результат);
	Исключение
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,,, ОписаниеОшибки());
		Возврат Новый Массив;
	КонецПопытки;
	
КонецФункции

Процедура ОтработатьСобытие(ИсточникСобытия) Экспорт
	
	Попытка
		
		СписокКарт = ПолучитьСписокКарт(ИсточникСобытия);
		
		Если Действие = Перечисления.ОСМИ_Действие.ОтправкаДанныхКартыНаСервер Тогда
			
			Для Каждого Карта1С из СписокКарт Цикл
				
				Попытка 
					
					Карта = ОСМИ_ОбщиеСервер.ПолучитьЭлектроннуюКарту(Карта1С);
					
					Если НЕ Карта = Неопределено Тогда
						КартаОбъект = Карта.ПолучитьОбъект();
						Если НЕ КартаОбъект.УстановитьЗначенияПолей(, Истина, Карта1С) Тогда
							ВызватьИсключение "Ошибка обновления электронной карты: " + Карта;
						КонецЕсли;
						КартаОбъект.ОбменДанными.Загрузка = Истина;
						КартаОбъект.Записать();
					Иначе
						ВызватьИсключение "Не удалось получить Электронную карту для карты 1С: " + Карта1С;
					КонецЕсли;
					
				Исключение
					ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,, Ссылка,
						ОписаниеОшибки());
				КонецПопытки;
				
			КонецЦикла;
			
		ИначеЕсли Действие = Перечисления.ОСМИ_Действие.ПереводКартыНаДругойШаблон Тогда
			
			Для Каждого ДанныеКарты1С из СписокКарт Цикл
				
				Карта = ОСМИ_ОбщиеСервер.ПолучитьЭлектроннуюКарту(ДанныеКарты1С.Карта);
				
				Попытка
					
					Если НЕ Карта = Неопределено Тогда

						Если ТипЗнч(ДанныеКарты1С.Шаблон) = Тип("Строка") Тогда

							ШаблонСсылка = Справочники.ОСМИ_ШаблоныЭлектронныхКарт.НайтиПоНаименованию(СокрЛП(ДанныеКарты1С.Шаблон));
							Если НЕ ЗначениеЗаполнено(ШаблонСсылка) Тогда
								ВызватьИсключение "Неизвестное наименование шаблона электронной карты";
							КонецЕсли;
							ШаблонНаименование = ДанныеКарты1С.Шаблон;
							
						ИначеЕсли ТипЗнч(ДанныеКарты1С.Шаблон) = Тип("СправочникСсылка.ОСМИ_ШаблоныЭлектронныхКарт") Тогда
							
							Если НЕ ЗначениеЗаполнено(ДанныеКарты1С.Шаблон) Тогда
								ВызватьИсключение "Неизвестный шаблон электронной карты: " + Карта;
							КонецЕсли;
							ШаблонСсылка = ДанныеКарты1С.Шаблон;
							ШаблонНаименование = ДанныеКарты1С.Шаблон.Наименование;
							
						Иначе
							ВызватьИсключение "Неизвестный шаблон электронной карты: " + Карта;
						КонецЕсли;

						Если Карта.Шаблон <> ШаблонСсылка Тогда

							Если НЕ ОСМИ_РаботаСAPI.СменитьШаблон(СокрЛП(КартаОбъект.Код), СокрЛП(ШаблонНаименование)).Успех Тогда
								ВызватьИсключение "Ошибка смены шаблона электронной карты: " + Карта;
							КонецЕсли;
							
							КартаОбъект = Карта.ПолучитьОбъект();
							КартаОбъект.Шаблон = ШаблонСсылка;
							КартаОбъект.ОбменДанными.Загрузка = Истина;
							КартаОбъект.Записать();
							
						КонецЕсли;
						
					Иначе
						ВызватьИсключение "Не удалось получить Электронную карту для карты 1С: " + ДанныеКарты1С.Карта;
					КонецЕсли;
					
				Исключение
					ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,, Ссылка,
						ОписаниеОшибки());
				КонецПопытки;
					
			КонецЦикла;
			
		ИначеЕсли Действие = Перечисления.ОСМИ_Действие.ПушРассылка Тогда
			
			ПушРассылка = Документы.ОСМИ_ПушРассылка.СоздатьДокумент();
			
			Для Каждого Карта1С из СписокКарт Цикл
				Стр = ПушРассылка.Адресаты.Добавить();
				Стр.Карта = Карта1С;
			КонецЦикла;
			Если ПушРассылка.Адресаты.Количество() > 0 Тогда 
				ПушРассылка.Дата = ТекущаяДата();
				ПушРассылка.ТекстСообщения = ТекстРассылки;
				ПушРассылка.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
		ИначеЕсли Действие = Перечисления.ОСМИ_Действие.МаркетинговаяАкция Тогда
			
			МаркетинговаяАкция =  Документы.ОСМИ_ДинамическаяАкция.СоздатьДокумент();
			
			Для Каждого Карта1С из СписокКарт Цикл
				Стр = МаркетинговаяАкция.Адресаты.Добавить();
				Стр.Карта = Карта1С;
			КонецЦикла;
			Если ПушРассылка.Адресаты.Количество() > 0 Тогда 
				МаркетинговаяАкция.Дата = ТекущаяДата();
				МаркетинговаяАкция.ТекстСообщения = ТекстРассылки;
				МаркетинговаяАкция.ТекстАкции = ТекстПоля;
				МаркетинговаяАкция.ТекстЗаголовка = ТекстЗаголовка;
				МаркетинговаяАкция.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,, Ссылка,
			ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Функция СоздатьПолучитьРегламентноеЗадание() Экспорт
	
	Попытка

		Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Метаданные, Предопределенное, Ключ",
			Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание, Ложь, Ссылка.УникальныйИдентификатор()));
		
		Если Задания.Количество() > 0 тогда
			Задание = Задания[0];
		Иначе                                     
			Задание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание);
			УстановитьПараметрыРегламентногоЗадания(Задание);
		КонецЕсли;
		
		Возврат Задание;
		
	Исключение
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,, Ссылка,
			ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Процедура УстановитьПараметрыРегламентногоЗадания(Задание = Неопределено, Расписание = Неопределено) Экспорт
	
	Если Задание = Неопределено Тогда
		Задание = СоздатьПолучитьРегламентноеЗадание();
		Если Задание = Неопределено Тогда
			Сообщить("Ошибка получения регламентного задания!");
		КонецЕсли;
	КонецЕсли;
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый Структура("НастройкаСобытия", Ссылка));
	
	Задание.Параметры = МассивПараметров;
	Задание.Ключ = Ссылка.УникальныйИдентификатор();	
	Задание.Использование = Использование;
	Задание.Наименование = "Обработка событий ОСМИ: " + Наименование;
	Если Расписание <> Неопределено Тогда
		Задание.Расписание = Расписание;
	КонецЕсли;
	Задание.Записать();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Попытка
		
		Задания = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Новый Структура("Метаданные, Предопределенное, Ключ",
			Метаданные.РегламентныеЗадания.ОСМИ_РегламентноеЗадание, Ложь, Ссылка.УникальныйИдентификатор()));
		
		Если Задания.Количество() > 0 тогда
			УстановитьПараметрыРегламентногоЗадания(Задания[0]);
		КонецЕсли;
		
	Исключение
		ЗаписьЖурналаРегистрации("ОСМИ.Ошибка", УровеньЖурналаРегистрации.Ошибка,, Ссылка,
			ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

