Функция СоздатьЗаписьСоответствияКарт(Карта1С, ЭлектроннаяКарта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НоваяЗапись = РегистрыСведений.ОСМИ_СоответствиеКарт.СоздатьМенеджерЗаписи();
	НоваяЗапись.ОбъектБазы = Карта1С;
	НоваяЗапись.ЭлектроннаяКарта = ЭлектроннаяКарта;
	НоваяЗапись.ДатаРегистрации = ТекущаяДата();
	
	Попытка
		НоваяЗапись.Записать(Истина);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

Функция СформироватьДанныеБаркода(Шаблон, ОтображатьБаркод, ОтображатьПодпись, Карта1С) Экспорт
	
	ДанныеБаркода = Новый Структура("show, showSignature", ОтображатьБаркод, ОтображатьПодпись);
		
	Если ТипЗнч(Шаблон.СпособПолученияСодержимогоБаркода) = Тип("Строка") Тогда
		ДанныеБаркода.Вставить("message", Шаблон.СпособПолученияСодержимогоБаркода);
	ИначеЕсли ЗначениеЗаполнено(Шаблон.СпособПолученияСодержимогоБаркода) Тогда 
		ДанныеБаркода.Вставить("message",
			Шаблон.СпособПолученияСодержимогоБаркода.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С));
	КонецЕсли;
	
	Если ТипЗнч(Шаблон.СпособПолученияСодержимогоПодписи) = Тип("Строка") Тогда
		ДанныеБаркода.Вставить("signature", Шаблон.СпособПолученияСодержимогоПодписи);
	ИначеЕсли ЗначениеЗаполнено(Шаблон.СпособПолученияСодержимогоПодписи) Тогда 
		ДанныеБаркода.Вставить("signature",
			Шаблон.СпособПолученияСодержимогоПодписи.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С));
	КонецЕсли;
	
	Возврат ДанныеБаркода;
	
КонецФункции

Функция СформироватьДанныеПолей(Шаблон, Карта1С) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПолей = Новый Массив;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПоляШаблона.Имя КАК Имя,
	                      |	ПоляШаблона.СпособПолучения КАК СпособПолучения,
	                      |	ПоляШаблона.ОтправлятьПУШ КАК ОтправлятьПУШ
	                      |ИЗ
	                      |	Справочник.ОСМИ_ШаблоныЭлектронныхКарт.ПоляШаблона КАК ПоляШаблона
	                      |ГДЕ
	                      |	ПоляШаблона.Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", Шаблон);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.СпособПолучения) Тогда 
			Продолжить;
		ИначеЕсли ТипЗнч(Выборка.СпособПолучения) = Тип("Строка") Тогда 
			ДанныеПоля = Выборка.СпособПолучения;	
		Иначе
			ДанныеПоля = Выборка.СпособПолучения.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С);
		КонецЕсли;
		
		МассивПолей.Добавить(Новый Структура("label, value", СокрЛП(Выборка.Имя), СокрЛП(ДанныеПоля)));		
		
	КонецЦикла;
	
	Возврат МассивПолей;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

Функция ОбновитьДанныеПолей(Шаблон, Карта1С, КартаОСМИ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивПолей = Новый Массив;
	флОтправлятьПуш = Ложь;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПоляШаблона.Имя КАК Имя,
	                      |	ПоляШаблона.СпособПолучения КАК СпособПолучения,
	                      |	ПоляШаблона.ОтправлятьПУШ КАК ОтправлятьПУШ
	                      |ИЗ
	                      |	Справочник.ОСМИ_ШаблоныЭлектронныхКарт.ПоляШаблона КАК ПоляШаблона
	                      |ГДЕ
	                      |	ПоляШаблона.Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", Шаблон);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.СпособПолучения) Тогда 
			Продолжить;
		ИначеЕсли ТипЗнч(Выборка.СпособПолучения) = Тип("Строка") Тогда 
			ДанныеПоля = Выборка.СпособПолучения;	
		Иначе
			ДанныеПоля = Выборка.СпособПолучения.ПолучитьОбъект().ПолучитьЗначениеПоля(Карта1С);
		КонецЕсли;
		
		МассивПолей.Добавить(Новый Структура("label, value", СокрЛП(Выборка.Имя), СокрЛП(ДанныеПоля)));		
		
		НайденныеПоля = КартаОСМИ.ПоляКарты.НайтиСтроки(Новый Структура("Поле", СокрЛП(Выборка.Имя)));
		Если НайденныеПоля.Количество() > 0 Тогда
			Для Каждого Поле Из НайденныеПоля Цикл
				флОтправлятьПуш = флОтправлятьПуш ИЛИ (Поле.Значение <> СокрЛП(ДанныеПоля) И Выборка.ОтправлятьПУШ);
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура("МассивПолей, ОтправлятьПуш", МассивПолей, флОтправлятьПуш);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

Функция СформироватьСтруктуруДанныхКарты(Шаблон, Карта1С, КартаОСМИ, ОбновитьКартуОСМИ = Ложь) Экспорт
	
	Если ОбновитьКартуОСМИ Тогда
		
		СтруктураОбновленныхДанных = ОбновитьДанныеПолей(Шаблон, Карта1С, КартаОСМИ);
		
		Возврат Новый Структура("СтруктураДанныхКарты, ОтправлятьПуш",
			Новый Структура("values, barcode", СтруктураОбновленныхДанных.МассивПолей,
			СформироватьДанныеБаркода(Шаблон, КартаОСМИ.ОтображатьБаркод, КартаОСМИ.ОтображатьПодпись, Карта1С)),
			СтруктураОбновленныхДанных.ОтправлятьПуш);

	Иначе
	
		Возврат Новый Структура("СтруктураДанныхКарты, ОтправлятьПуш",
			Новый Структура("values, barcode", СформироватьДанныеПолей(Шаблон, Карта1С),
			СформироватьДанныеБаркода(Шаблон, Шаблон.ОтображатьБаркод, Шаблон.ОтображатьПодпись, Карта1С)), Ложь);

    КонецЕсли;
				
КонецФункции

Функция СоздатьКартуИзКарты1С(Карта1С, Шаблон = Неопределено, КартаОСМИ = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		
		НачатьТранзакцию();	
		
		Если Карта1С = Неопределено Тогда  
			ВызватьИсключение "Не указан объект 1С";
		КонецЕсли;	
		
		Если КартаОСМИ = Неопределено Тогда
			
			Если Шаблон = Неопределено Тогда
				Шаблон = Константы.ОСМИ_ШаблонПоУмолчанию.Получить();
				Если Шаблон.Пустая() Тогда
					ВызватьИсключение "Не установлен шаблон по умолчанию для новых карт ОСМИ";
				КонецЕсли;
			КонецЕсли;
		
			КартаОСМИ = Справочники.ОСМИ_ЭлектронныеКарты.СоздатьЭлемент();
			КартаОСМИ.Шаблон = Шаблон;
			КартаОСМИ.УстановитьНовыйКод();
			КартаОСМИ.ОтображатьБаркод = Шаблон.ОтображатьБаркод;
			КартаОСМИ.ОтображатьПодпись = Шаблон.ОтображатьПодпись;
			КартаОСМИ.Записать();
			
		Иначе
			
			Если ТипЗнч(КартаОСМИ) = Тип("СправочникСсылка.ОСМИ_ЭлектронныеКарты") Тогда
				КартаОСМИ = КартаОСМИ.ПолучитьОбъект();
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(КартаОСМИ.Шаблон) И
				Шаблон = Неопределено Тогда
				ВызватьИсключение "Не установлен шаблон для карты ОСМИ";
			КонецЕсли;
				
		КонецЕсли;
			
		Если НЕ СоздатьЗаписьСоответствияКарт(Карта1С, КартаОСМИ.Ссылка) Тогда
			ВызватьИсключение "Ошибка записи соответствия карты ОСМИ для карты 1С: " + ОписаниеОшибки();	
		КонецЕсли;
		
		КартаОСМИ.Наименование = Карта1С.Наименование;
		
		Попытка
			СтруктураПараметров = СформироватьСтруктуруДанныхКарты(Шаблон, Карта1С, КартаОСМИ).СтруктураДанныхКарты;
		Исключение
			ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;
				
		Результат = ОСМИ_РаботаСAPI.СоздатьКарту(КартаОСМИ.Код, Шаблон.Наименование, Истина, СтруктураПараметров);
		Если НЕ Результат.Успех Тогда
			ВызватьИсключение "Ошибка создания карты на сервисе ОСМИ: " + Результат.ТекстОтвета;
		КонецЕсли;
		
		ДанныеКарты = ОСМИ_РаботаСAPI.ЗапроситьИнформациюПоКарте(КартаОСМИ.Код);
		Если НЕ ДанныеКарты.Успех Тогда
			ВызватьИсключение "Ошибка создания карты на сервисе ОСМИ: " + Результат.ТекстОтвета;
		КонецЕсли;
		
		КартаОСМИ.ПоляКарты.Очистить();
		Для Каждого ЗначениеПоля  из ДанныеКарты.Ответ.values Цикл
			НовоеПолеКарты = КартаОСМИ.ПоляКарты.Добавить();
			НовоеПолеКарты.Поле = ЗначениеПоля.label;
			НовоеПолеКарты.Значение = ЗначениеПоля.value; 
		КонецЦикла;
		
		КартаОСМИ.ДополнительнаяИнформация = "";
		Для Каждого СтрокаИнформации из ДанныеКарты.Ответ.general Цикл
			КартаОСМИ.ДополнительнаяИнформация = КартаОСМИ.ДополнительнаяИнформация + 
				СтрокаИнформации.Ключ + " : " + СтрокаИнформации.Значение + Символы.ПС;
		КонецЦикла;
		
		КартаОСМИ.Записать();
		
		ЗафиксироватьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);
		
		Возврат КартаОСМИ.Ссылка;
		
	Исключение
		
		ОСМИ_ОбщиеСервер.ЗарегистрироватьОшибкуОСМИ(ОписаниеОшибки(),, Ложь);
		ОтменитьТранзакцию();
		УстановитьПривилегированныйРежим(Ложь);
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции

